<UserControl x:Class="LearnNewWord.View.PracticeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:prop="clr-namespace:LearnNewWord.Managers.Properties"
             mc:Ignorable="d"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary Source="../Managers/Resource/MergeResource.xaml" />
    </UserControl.Resources>

    <Grid Grid.Column="0" VerticalAlignment="Stretch" KeyboardNavigation.IsTabStop="False">
        <Grid.RowDefinitions>
            <RowDefinition Height="45" />
            <RowDefinition Height="45" />
            <RowDefinition Height="45" />
            <RowDefinition Height="10" />
            <RowDefinition Height="45" />
            <RowDefinition Height="10" />
            <RowDefinition Height="45" />
            <RowDefinition Height="10" />
            <RowDefinition Height="90" />
            <RowDefinition Height="10" />
            <RowDefinition Height="180" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!--row0-->
        <Border Grid.Row="0" Grid.Column="0"
                BorderThickness="0 0 0 1"
                BorderBrush="{StaticResource Color28Brush}"
                Grid.ColumnSpan="2"
                Margin="-10 0 -15 0"
                >
            <ToggleButton 
                Style="{StaticResource ToggleButtonIcon}"
                BorderThickness="0"
                HorizontalAlignment="Left"
                Margin="10 0 0 0"
                prop:CustomizeProperty.Icon="{StaticResource IconStudy}"
                prop:CustomizeProperty.IconSelected="{StaticResource IconHomework}"
                IsChecked="{Binding IsPractice, UpdateSourceTrigger=PropertyChanged}"
                Command="{Binding SwitchModeCommand}"
                ToolTip="{Binding ToolTipButtonPractice, UpdateSourceTrigger=PropertyChanged}"/>
        </Border>

        <Border Grid.Row="0" Grid.Column="1"
                Padding="5"
                Margin="0 0 0 1">
            <TextBlock Text="{Binding Message, UpdateSourceTrigger=PropertyChanged}"
                       Style="{StaticResource TextBlockStyle5}"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Foreground="{StaticResource Color1Brush}"/>
            <Border.Style>
                <Style TargetType="Border">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Status, UpdateSourceTrigger=PropertyChanged}" Value="Success">
                            <Setter Property="Background" Value="{StaticResource Color16Brush}"/> 
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status, UpdateSourceTrigger=PropertyChanged}" Value="Fail">
                            <Setter Property="Background" Value="{StaticResource Color30Brush}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status, UpdateSourceTrigger=PropertyChanged}" Value="Warning">
                            <Setter Property="Background" Value="{StaticResource Color23Brush}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>

        <!--row1-->
        <Button Grid.Row="1"  Grid.Column="1"
                Width="30"
                Height="30"
                Style="{StaticResource ButtonIcon}"
                prop:CustomizeProperty.Icon="{StaticResource IconAddData}"
                prop:CustomizeProperty.IconHeight="30"
                prop:CustomizeProperty.IconWidth="30"
                HorizontalAlignment="Left"
                BorderThickness="0"
                Visibility="{Binding IsPractice, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityReverseConverter}}"
                Command="{Binding AddUpdateNewWordCommand}" 
                ToolTip="{Binding ToolTipButtonAddUpdateWord, UpdateSourceTrigger=PropertyChanged}"/>

        <Button Grid.Row="1"  Grid.Column="1"
                Width="30"
                Height="30"
                Style="{StaticResource ButtonIcon}"
                prop:CustomizeProperty.Icon="{StaticResource IconClear}"
                prop:CustomizeProperty.IconHeight="30"
                prop:CustomizeProperty.IconWidth="30"
                HorizontalAlignment="Center"
                BorderThickness="0"
                Visibility="{Binding IsPractice, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityReverseConverter}}"
                Command="{Binding ClearWordCommand}" 
                ToolTip="Clear"/>

        <CheckBox Grid.Row="1"  Grid.Column="1" Content="Known"
                IsChecked="{Binding Word.IsKnown, UpdateSourceTrigger=PropertyChanged}"
                HorizontalAlignment="Right"
                Visibility="{Binding IsPractice, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityReverseConverter}}" />

        <!--row2-->
        <RadioButton Grid.Row="2" Grid.Column="0"
                                 x:Name="english"
                                 Content="English"
                                 Style="{StaticResource RadioText}"
                                 IsChecked="{Binding IsLearnEnglish, UpdateSourceTrigger=PropertyChanged}"
                                 IsEnabled="{Binding IsPractice, UpdateSourceTrigger=PropertyChanged}" />

        <TextBox Grid.Row="2" Grid.Column="1"
                Text="{Binding Word.English, UpdateSourceTrigger=PropertyChanged}"
                Width="auto" Height="45"
                HorizontalAlignment="Stretch"
                 TabIndex="0">
            <TextBox.Style>
                <Style BasedOn="{StaticResource TextBoxStyle1}" TargetType="TextBox">
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=english, Path=IsChecked}" Value="True" />
                                <Condition Binding="{Binding IsPractice, UpdateSourceTrigger=PropertyChanged}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="False" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=english, Path=IsChecked}" Value="True" />
                                <Condition Binding="{Binding IsPractice, UpdateSourceTrigger=PropertyChanged}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="True" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
            <TextBox.InputBindings>
                <KeyBinding Command="{Binding KeyEnterPressCommand}" Key="Enter" />
            </TextBox.InputBindings>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="LostFocus">
                    <i:InvokeCommandAction 
                                Command="{Binding EnglishLostFocusCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TextBox>

        <!--row 3-->
        <!--<TextBlock Grid.Row="4" Grid.Column="0" Text="IPA"
                        Style="{StaticResource TextBlockStyle1}"
                        FontSize="{StaticResource FontSize24}"
                        VerticalAlignment="Center"/>-->
        <Button Grid.Row="4"
                Content="IPA"
                Command="{Binding SoundPronounceCommand}">
            <Button.Style>
                <Style BasedOn="{StaticResource ButtonText}" TargetType="Button">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=ipaText, Path=Text}" Value="">
                            <Setter Property="IsEnabled" Value="False" />
                            <Setter Property="Cursor" Value="Arrow" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <TextBox Grid.Row="4" Grid.Column="1"
                Text="{Binding Word.IpaText, UpdateSourceTrigger=PropertyChanged}"
                Width="auto" Height="45"
                HorizontalAlignment="Stretch"
                IsEnabled="{Binding IsPractice, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanReverseConverter}}"
                Style="{StaticResource TextBoxStyle1}"
                 TabIndex="1"
                 x:Name="ipaText"/>

        <!--row4-->
        <RadioButton Grid.Row="6" Grid.Column="0"
                    x:Name="vietnamese"
                    Content="Vietnamese"
                    Style="{StaticResource RadioText}"
                    IsChecked="{Binding IsLearnEnglish, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanReverseConverter}}"
                    IsEnabled="{Binding IsPractice, UpdateSourceTrigger=PropertyChanged}" />

        <TextBox Grid.Row="6" Grid.Column="1"
                    Text="{Binding Word.Vietnamese, UpdateSourceTrigger=PropertyChanged}"
                    Width="auto" Height="45"
                    HorizontalAlignment="Stretch"
                 TabIndex="2"
                >
            <TextBox.Style>
                <Style BasedOn="{StaticResource TextBoxStyle1}" TargetType="TextBox">
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=vietnamese, Path=IsChecked}" Value="True" />
                                <Condition Binding="{Binding IsPractice, UpdateSourceTrigger=PropertyChanged}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="False" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=vietnamese, Path=IsChecked}" Value="True" />
                                <Condition Binding="{Binding IsPractice, UpdateSourceTrigger=PropertyChanged}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="True" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
            <TextBox.InputBindings>
                <KeyBinding Command="{Binding KeyEnterPressCommand}" Key="Enter" />
            </TextBox.InputBindings>
        </TextBox>

        <!--row5-->
        <TextBlock Grid.Row="8" Grid.Column="0" Text="Example"
                        Style="{StaticResource TextBlockStyle1}"
                        FontSize="{StaticResource FontSize24}"
                        VerticalAlignment="Center" />

        <TextBox Grid.Row="8" Grid.Column="1"
                Text="{Binding Word.Example, UpdateSourceTrigger=PropertyChanged}"
                Style="{StaticResource TextBoxStyle1}"
                Width="auto" Height="90"
                FontSize="{StaticResource FontSize20}"
                AcceptsReturn="True"
                TextWrapping="Wrap"
                VerticalContentAlignment="Center"
                VerticalAlignment="Top"
                VerticalScrollBarVisibility="Auto"
                HorizontalAlignment="Stretch"
                IsEnabled="{Binding IsPractice, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanReverseConverter}}" 
                 TabIndex="3"
                 AcceptsTab="True"
                />

        <!--row6-->
        <Grid Grid.Row="10" Grid.Column="0">
            <TextBlock
                            Text="Image"
                            Style="{StaticResource TextBlockStyle1}"
                            FontSize="{StaticResource FontSize24}"
                            VerticalAlignment="Center"
                            Visibility="{Binding IsPractice, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}" />

            <Button Grid.Column="0"
                                Width="100"
                                Height="60"
                                Style="{StaticResource ButtonIcon}"
                                prop:CustomizeProperty.Icon="{StaticResource IconUpload}"
                                HorizontalAlignment="Left"
                                Visibility="{Binding IsPractice, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityReverseConverter}}"
                                Command="{Binding UploadImageCommand}" />
        </Grid>

        <Border Grid.Row="10" Grid.Column="1"
                        BorderThickness="1"
                        BorderBrush="{StaticResource Color13Brush}"
                        Background="{StaticResource Color9Brush}">

            <Image Grid.Column="1" Source="{Binding ImageSuggestion, UpdateSourceTrigger=PropertyChanged}"
                                   Width="auto"
                                   Height="auto"
                                   Stretch="Fill" />
        </Border>

        <!--row7-->
        <StackPanel Grid.Row="11" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal"
                                IsEnabled="{Binding IsPractice, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanReverseConverter}}">
            <CheckBox Content="Noun"
                            IsChecked="{Binding Word.IsNoun, UpdateSourceTrigger=PropertyChanged}" />

            <CheckBox Content="Adjective"
                            Margin="50 0 0 0"
                            IsChecked="{Binding Word.IsAjective, UpdateSourceTrigger=PropertyChanged}" />

            <CheckBox Content="Verb"
                            Margin="50 0 0 0"
                            IsChecked="{Binding Word.IsVerb, UpdateSourceTrigger=PropertyChanged}" />

            <CheckBox Content="Adverb"
                            Margin="50 0 0 0"
                            IsChecked="{Binding Word.IsAdverb, UpdateSourceTrigger=PropertyChanged}" />
        </StackPanel>
    </Grid>
</UserControl>
