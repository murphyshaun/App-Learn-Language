<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:prop="clr-namespace:LearnNewWord.Managers.Properties">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ColorGeneric.xaml" />
        <ResourceDictionary Source="Icon.xaml" />
        <ResourceDictionary Source="Font.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="ToggleButtonEllipse" TargetType="{x:Type ToggleButton}">
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="20" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource Color20Brush}" />
        <Setter Property="Background" Value="{StaticResource WhiteBrush}" />
        <Setter Property="Margin" Value="5 5 0 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Ellipse x:Name="ellipse" 
                             Width="{TemplateBinding Width}" 
                             Height="{TemplateBinding Height}" 
                             StrokeThickness="{TemplateBinding BorderThickness}"
                             Stroke="{TemplateBinding BorderBrush}"
                             Fill="{TemplateBinding Background}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ellipse" Property="Fill" Value="{StaticResource Color20Brush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleButtonSort" TargetType="{x:Type ToggleButton}">
        <Setter Property="Height" Value="17" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Margin" Value="5 0 0 0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">

                    <Image x:Name="icon" 
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"
                            Source="{StaticResource IconArrowDownSort}"/>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="icon" Property="Source" Value="{StaticResource IconArrowUpSort}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleButtonIcon" TargetType="{x:Type ToggleButton}">
        <Setter Property="Width" Value="45" />
        <Setter Property="Height" Value="45" />
        <Setter Property="Background" Value="{StaticResource Color10Brush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="{StaticResource Color11Brush}" />
        <Setter Property="prop:CustomizeProperty.IconWidth" Value="45" />
        <Setter Property="prop:CustomizeProperty.IconHeight" Value="45" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="5 5 5 5">
                        <Border.Effect>
                            <DropShadowEffect Opacity="0.08"/>
                        </Border.Effect>
                        <Image x:Name="icon" 
                               Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(prop:CustomizeProperty.IconHeight)}"
                               Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(prop:CustomizeProperty.IconWidth)}"
                               Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(prop:CustomizeProperty.Icon)}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Color6Brush}" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="icon" Property="Source" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(prop:CustomizeProperty.IconSelected)}" />
                        </Trigger>
                        
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="10" ShadowDepth="0" Opacity="0.5"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ToggleButtonIconOrText" TargetType="{x:Type ToggleButton}">
        <Setter Property="Width" Value="50" />
        <Setter Property="Height" Value="50" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize30}" />
        <Setter Property="FontWeight" Value="{StaticResource SemiBold}" />
        <Setter Property="Foreground" Value="{StaticResource Color20Brush}" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="Background" Value="{StaticResource Color10Brush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="{StaticResource Color11Brush}" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="prop:CustomizeProperty.IconWidth" Value="50" />
        <Setter Property="prop:CustomizeProperty.IconHeight" Value="50" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="Transparent">
                        <Border x:Name="border" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="0 0 15 15"
                                >
                            <Border.Background>
                                <ImageBrush ImageSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(prop:CustomizeProperty.Icon)}" Stretch="Fill" />
                            </Border.Background>
                        </Border>

                        <StackPanel VerticalAlignment="Center"
                                    Margin="5"
                                    Background="Transparent">
                            <TextBlock x:Name="text1"
                                       Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       FontStyle="{TemplateBinding FontStyle}" 
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Visibility="Collapsed"/>

                            <TextBlock x:Name="text2"
                                       Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       FontSize="{StaticResource FontSize20}"
                                       FontWeight="{StaticResource Normal}"
                                       Foreground="{StaticResource Color28Brush}"
                                       FontStyle="Italic" 
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       TextWrapping="Wrap"
                                       Margin="0 20 0 0"
                                       Visibility="Collapsed"/>
                        </StackPanel>
                        
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="border" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="text1" Property="Visibility" Value="Visible" />
                            <Setter TargetName="text2" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>